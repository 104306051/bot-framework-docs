### YamlMime:ManagedReference
items:
- uid: Microsoft.Bot.Builder.Dialogs.Chain
  commentId: T:Microsoft.Bot.Builder.Dialogs.Chain
  id: Chain
  children:
  - Microsoft.Bot.Builder.Dialogs.Chain.Case``1(System.Text.RegularExpressions.Regex,Microsoft.Bot.Builder.Dialogs.ContextualSelector{System.String,``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.Case``2(System.Func{``0,System.Boolean},Microsoft.Bot.Builder.Dialogs.ContextualSelector{``0,``1})
  - Microsoft.Bot.Builder.Dialogs.Chain.Catch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  - Microsoft.Bot.Builder.Dialogs.Chain.Catch``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Exception,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  - Microsoft.Bot.Builder.Dialogs.Chain.ContinueWith``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Chain.Continuation{``0,``1})
  - Microsoft.Bot.Builder.Dialogs.Chain.Default``2(Microsoft.Bot.Builder.Dialogs.ContextualSelector{``0,``1})
  - Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.Do``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task})
  - Microsoft.Bot.Builder.Dialogs.Chain.Fold``1(Microsoft.Bot.Builder.Dialogs.IDialog{System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Dialogs.IDialog{``0}}},System.Func{``0,``0,``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.From``1(System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  - Microsoft.Bot.Builder.Dialogs.Chain.Loop``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.PostEvent``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1)
  - Microsoft.Bot.Builder.Dialogs.Chain.PostToChain
  - Microsoft.Bot.Builder.Dialogs.Chain.PostToUser``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.Return``1(``0)
  - Microsoft.Bot.Builder.Dialogs.Chain.Select``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,``1})
  - Microsoft.Bot.Builder.Dialogs.Chain.SelectMany``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``1}},System.Func{``0,``1,``2})
  - Microsoft.Bot.Builder.Dialogs.Chain.Switch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.ICase{``0,``1}[])
  - Microsoft.Bot.Builder.Dialogs.Chain.Then``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task{``1}})
  - Microsoft.Bot.Builder.Dialogs.Chain.Unwrap``1(Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  - Microsoft.Bot.Builder.Dialogs.Chain.Void``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.Void``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack)
  - Microsoft.Bot.Builder.Dialogs.Chain.WaitToBot``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.Where``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,System.Boolean})
  - Microsoft.Bot.Builder.Dialogs.Chain.While``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{System.Boolean}},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  - Microsoft.Bot.Builder.Dialogs.Chain.WithScorable``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Scorables.IScorable{``1,``2})
  langs:
  - csharp
  name: Chain
  nameWithType: Chain
  fullName: Microsoft.Bot.Builder.Dialogs.Chain
  type: Class
  assemblies:
  - Microsoft.Bot.Builder
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: A fluent, chainable interface for IDialogs.
  syntax:
    content: public static class Chain
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Case``1(System.Text.RegularExpressions.Regex,Microsoft.Bot.Builder.Dialogs.ContextualSelector{System.String,``0})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Case``1(System.Text.RegularExpressions.Regex,Microsoft.Bot.Builder.Dialogs.ContextualSelector{System.String,``0})
  id: Case``1(System.Text.RegularExpressions.Regex,Microsoft.Bot.Builder.Dialogs.ContextualSelector{System.String,``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Case<R>(Regex, ContextualSelector<String,R>)
  nameWithType: Chain.Case<R>(Regex, ContextualSelector<String,R>)
  fullName: Chain.Case<R>(Regex, ContextualSelector<String,R>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Constructs a case based on a regular expression.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.ICase<string,R> Case<R> (System.Text.RegularExpressions.Regex regex, Microsoft.Bot.Builder.Dialogs.ContextualSelector<string,R> selector);
    parameters:
    - id: regex
      type: System.Text.RegularExpressions.Regex
      description: The regex for condition.
    - id: selector
      type: Microsoft.Bot.Builder.Dialogs.ContextualSelector{System.String,R}
      description: The contextual selector for the case.
    typeParameters:
    - id: R
      description: The type of the object returned by selector.
    return:
      type: Microsoft.Bot.Builder.Dialogs.ICase{System.String,R}
      description: The case.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Case``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Case``2(System.Func{``0,System.Boolean},Microsoft.Bot.Builder.Dialogs.ContextualSelector{``0,``1})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Case``2(System.Func{``0,System.Boolean},Microsoft.Bot.Builder.Dialogs.ContextualSelector{``0,``1})
  id: Case``2(System.Func{``0,System.Boolean},Microsoft.Bot.Builder.Dialogs.ContextualSelector{``0,``1})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Case<T,R>(Func<T,Boolean>, ContextualSelector<T,R>)
  nameWithType: Chain.Case<T,R>(Func<T,Boolean>, ContextualSelector<T,R>)
  fullName: Chain.Case<T,R>(Func<T,Boolean>, ContextualSelector<T,R>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Constructs a case.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.ICase<T,R> Case<T,R> (Func<T,bool> condition, Microsoft.Bot.Builder.Dialogs.ContextualSelector<T,R> selector);
    parameters:
    - id: condition
      type: System.Func{T,System.Boolean}
      description: The condition of the case.
    - id: selector
      type: Microsoft.Bot.Builder.Dialogs.ContextualSelector`2
      description: The contextual selector of the case.
    typeParameters:
    - id: T
      description: The type of incoming value to case.
    - id: R
      description: The type of the object returned by selector.
    return:
      type: Microsoft.Bot.Builder.Dialogs.ICase`2
      description: To be added.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Case``2*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Catch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Catch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  id: Catch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Catch<T,E>(IDialog<T>, Func<IDialog<T>,E,IDialog<T>>)
  nameWithType: Chain.Catch<T,E>(IDialog<T>, Func<IDialog<T>,E,IDialog<T>>)
  fullName: Chain.Catch<T,E>(IDialog<T>, Func<IDialog<T>,E,IDialog<T>>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: When the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> has completed, catch and handle any exceptions of type <code>E</code>.
  syntax:
    content: 'public static Microsoft.Bot.Builder.Dialogs.IDialog<T> Catch<T,E> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, Func<Microsoft.Bot.Builder.Dialogs.IDialog<T>,E,Microsoft.Bot.Builder.Dialogs.IDialog<T>> block) where E : Exception;'
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: block
      type: System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{T},E,Microsoft.Bot.Builder.Dialogs.IDialog{T}}
      description: The lambda expression representing the catch block handler.
    typeParameters:
    - id: T
      description: The type returned by the antecedent dialog.
    - id: E
      description: The type of exception to catch and handle.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The result of the catch block handler if there is an exception of type <code>E</code>.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Catch``2*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Catch``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Exception,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Catch``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Exception,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  id: Catch``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Exception,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Catch<T>(IDialog<T>, Func<IDialog<T>,Exception,IDialog<T>>)
  nameWithType: Chain.Catch<T>(IDialog<T>, Func<IDialog<T>,Exception,IDialog<T>>)
  fullName: Chain.Catch<T>(IDialog<T>, Func<IDialog<T>,Exception,IDialog<T>>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: When the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> has completed, catch and handle any exceptions.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> Catch<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, Func<Microsoft.Bot.Builder.Dialogs.IDialog<T>,Exception,Microsoft.Bot.Builder.Dialogs.IDialog<T>> block);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: block
      type: System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{T},System.Exception,Microsoft.Bot.Builder.Dialogs.IDialog{T}}
      description: The lambda expression representing the catch block handler.
    typeParameters:
    - id: T
      description: The type returned by the antecedent dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The result of the catch block handler if there is an exception.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Catch``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.ContinueWith``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Chain.Continuation{``0,``1})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.ContinueWith``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Chain.Continuation{``0,``1})
  id: ContinueWith``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Chain.Continuation{``0,``1})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: ContinueWith<T,R>(IDialog<T>, Chain)
  nameWithType: Chain.ContinueWith<T,R>(IDialog<T>, Chain)
  fullName: Chain.ContinueWith<T,R>(IDialog<T>, Chain)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: When the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> has completed, execute the continuation to produce the next <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<R> ContinueWith<T,R> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, Microsoft.Bot.Builder.Dialogs.Chain.Continuation<T,R> continuation);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: continuation
      type: Microsoft.Bot.Builder.Dialogs.Chain
      description: The continuation to produce the next <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    typeParameters:
    - id: T
      description: The type of the antecedent dialog.
    - id: R
      description: The type of the next dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{R}
      description: The next <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.ContinueWith``2*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Default``2(Microsoft.Bot.Builder.Dialogs.ContextualSelector{``0,``1})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Default``2(Microsoft.Bot.Builder.Dialogs.ContextualSelector{``0,``1})
  id: Default``2(Microsoft.Bot.Builder.Dialogs.ContextualSelector{``0,``1})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Default<T,R>(ContextualSelector<T,R>)
  nameWithType: Chain.Default<T,R>(ContextualSelector<T,R>)
  fullName: Chain.Default<T,R>(ContextualSelector<T,R>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Constructs a case to use as the default.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.ICase<T,R> Default<T,R> (Microsoft.Bot.Builder.Dialogs.ContextualSelector<T,R> selector);
    parameters:
    - id: selector
      type: Microsoft.Bot.Builder.Dialogs.ContextualSelector`2
      description: The contextual selector of the case.
    typeParameters:
    - id: T
      description: The type of incoming value to case.
    - id: R
      description: The type of the object returned by selector.
    return:
      type: Microsoft.Bot.Builder.Dialogs.ICase`2
      description: The case.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Default``2*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  id: DefaultIfException``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: DefaultIfException<T,E>(IDialog<T>)
  nameWithType: Chain.DefaultIfException<T,E>(IDialog<T>)
  fullName: Chain.DefaultIfException<T,E>(IDialog<T>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: When the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> has completed, stop the propagation of an exception of <code>E</code>.
  syntax:
    content: 'public static Microsoft.Bot.Builder.Dialogs.IDialog<T> DefaultIfException<T,E> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent) where E : Exception;'
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    typeParameters:
    - id: T
      description: The type returned by the antecedent dialog.
    - id: E
      description: The type of exception to swallow.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The default value of <code>T</code> if there is an exception of type <code>E</code>.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``2*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  id: DefaultIfException``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: DefaultIfException<T>(IDialog<T>)
  nameWithType: Chain.DefaultIfException<T>(IDialog<T>)
  fullName: Chain.DefaultIfException<T>(IDialog<T>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: When the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> has completed, stop the propagation of Exception.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> DefaultIfException<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    typeParameters:
    - id: T
      description: The type returned by the antecedent dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The default value of <code>T</code> if there is an Exception.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Do``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Do``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task})
  id: Do``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Do<T>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task>)
  nameWithType: Chain.Do<T>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task>)
  fullName: Chain.Do<T>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Execute a side-effect after a <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> completes.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> Do<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, Func<Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable<T>,System.Threading.Tasks.Task> callback);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: callback
      type: System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{T},System.Threading.Tasks.Task}
      description: The callback method.
    typeParameters:
    - id: T
      description: The type of the dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Do``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Fold``1(Microsoft.Bot.Builder.Dialogs.IDialog{System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Dialogs.IDialog{``0}}},System.Func{``0,``0,``0})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Fold``1(Microsoft.Bot.Builder.Dialogs.IDialog{System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Dialogs.IDialog{``0}}},System.Func{``0,``0,``0})
  id: Fold``1(Microsoft.Bot.Builder.Dialogs.IDialog{System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Dialogs.IDialog{``0}}},System.Func{``0,``0,``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Fold<T>(IDialog<IEnumerable<IDialog<T>>>, Func<T,T,T>)
  nameWithType: Chain.Fold<T>(IDialog<IEnumerable<IDialog<T>>>, Func<T,T,T>)
  fullName: Chain.Fold<T>(IDialog<IEnumerable<IDialog<T>>>, Func<T,T,T>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Fold items from an enumeration of dialogs.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> Fold<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<System.Collections.Generic.IEnumerable<Microsoft.Bot.Builder.Dialogs.IDialog<T>>> antecedent, Func<T,T,T> folder);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Dialogs.IDialog{T}}}
      description: The antecedent dialog that produces an enumeration of <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: folder
      type: System.Func{T,T,T}
      description: The accumulator for the dialog enumeration.
    typeParameters:
    - id: T
      description: The type of the dialogs in the enumeration produced by the antecedent dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The accumulated result.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Fold``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.From``1(System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.From``1(System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  id: From``1(System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: From<T>(Func<IDialog<T>>)
  nameWithType: Chain.From<T>(Func<IDialog<T>>)
  fullName: Chain.From<T>(Func<IDialog<T>>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Construct a <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> that will make a new copy of another <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> when started.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> From<T> (Func<Microsoft.Bot.Builder.Dialogs.IDialog<T>> MakeDialog);
    parameters:
    - id: MakeDialog
      type: System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{T}}
      description: The dialog factory method.
    typeParameters:
    - id: T
      description: The type of the dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The new dialog.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.From``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Loop``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Loop``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  id: Loop``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Loop<T>(IDialog<T>)
  nameWithType: Chain.Loop<T>(IDialog<T>)
  fullName: Chain.Loop<T>(IDialog<T>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Loop the <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> forever.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> Loop<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The looping dialog.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Loop``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostEvent``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1)
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.PostEvent``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1)
  id: PostEvent``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1)
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: PostEvent<T,E>(IDialog<T>, E)
  nameWithType: Chain.PostEvent<T,E>(IDialog<T>, E)
  fullName: Chain.PostEvent<T,E>(IDialog<T>, E)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: When the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> has completed, post the item to the event queue.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> PostEvent<T,E> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, E event);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: event
      type: E
      description: The event.
    typeParameters:
    - id: T
      description: The type of the antecedent dialog.
    - id: E
      description: The type of the event.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The result from the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.PostEvent``2*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostToChain
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.PostToChain
  id: PostToChain
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: PostToChain()
  nameWithType: Chain.PostToChain()
  fullName: Chain.PostToChain()
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Post the message from the user to Chain.
  remarks: The returned <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> can be used as the root dialog for a chain.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<Microsoft.Bot.Connector.IMessageActivity> PostToChain ();
    parameters: []
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Connector.IMessageActivity}
      description: The dialog that dispatches the incoming message from the user to chain.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.PostToChain*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostToUser``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.PostToUser``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  id: PostToUser``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: PostToUser<T>(IDialog<T>)
  nameWithType: Chain.PostToUser<T>(IDialog<T>)
  fullName: Chain.PostToUser<T>(IDialog<T>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Post to the user the result of a <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> PostToUser<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    typeParameters:
    - id: T
      description: The type of the dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.PostToUser``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Return``1(``0)
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Return``1(``0)
  id: Return``1(``0)
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Return<T>(T)
  nameWithType: Chain.Return<T>(T)
  fullName: Chain.Return<T>(T)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Creates a <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> that returns a value.
  remarks: The type of the value should be serializable.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> Return<T> (T item);
    parameters:
    - id: item
      type: T
      description: The value to be wrapped.
    typeParameters:
    - id: T
      description: Type of the value.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> that wraps the value.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Return``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Select``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,``1})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Select``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,``1})
  id: Select``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,``1})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Select<T,R>(IDialog<T>, Func<T,R>)
  nameWithType: Chain.Select<T,R>(IDialog<T>, Func<T,R>)
  fullName: Chain.Select<T,R>(IDialog<T>, Func<T,R>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: When the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> has completed, project the result into a new <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<R> Select<T,R> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, Func<T,R> selector);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: selector
      type: System.Func{T,R}
      description: The projection function from <code>T</code> to <code>R</code>.
    typeParameters:
    - id: T
      description: The type of the antecedent dialog.
    - id: R
      description: The type of the projected dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{R}
      description: The result <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Select``2*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.SelectMany``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``1}},System.Func{``0,``1,``2})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.SelectMany``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``1}},System.Func{``0,``1,``2})
  id: SelectMany``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``1}},System.Func{``0,``1,``2})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: SelectMany<T,C,R>(IDialog<T>, Func<T,IDialog<C>>, Func<T,C,R>)
  nameWithType: Chain.SelectMany<T,C,R>(IDialog<T>, Func<T,IDialog<C>>, Func<T,C,R>)
  fullName: Chain.SelectMany<T,C,R>(IDialog<T>, Func<T,IDialog<C>>, Func<T,C,R>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: When the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> has completed, execute the next <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>, and use the projection to combine the results.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<R> SelectMany<T,C,R> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, Func<T,Microsoft.Bot.Builder.Dialogs.IDialog<C>> function, Func<T,C,R> projection);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: function
      type: System.Func{T,Microsoft.Bot.Builder.Dialogs.IDialog{C}}
      description: The factory method to create the next dialog <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: projection
      type: System.Func{T,C,R}
      description: The projection function for the combination of the two dialogs.
    typeParameters:
    - id: T
      description: The type of the antecedent dialog.
    - id: C
      description: The type of the intermediate dialog.
    - id: R
      description: The type of the projected dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{R}
      description: The result <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.SelectMany``3*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Switch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.ICase{``0,``1}[])
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Switch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.ICase{``0,``1}[])
  id: Switch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.ICase{``0,``1}[])
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Switch<T,R>(IDialog<T>, ICase<T,R>[])
  nameWithType: Chain.Switch<T,R>(IDialog<T>, ICase<T,R>[])
  fullName: Chain.Switch<T,R>(IDialog<T>, ICase<T,R>[])
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: "When the antecedent <xref href=\"Microsoft.Bot.Builder.Dialogs.IDialog`1\"></xref> has completed, go through each <xref href=\"Microsoft.Bot.Builder.Dialogs.ICase`2\"></xref> \n            and run the <xref href=\"Microsoft.Bot.Builder.Dialogs.ContextualSelector`2\"></xref>\" of the first <xref href=\"Microsoft.Bot.Builder.Dialogs.ICase`2\"></xref> that \n            the returned value by the antecedent dialog satisfies."
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<R> Switch<T,R> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, Microsoft.Bot.Builder.Dialogs.ICase<T,R>[] cases);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: cases
      type: Microsoft.Bot.Builder.Dialogs.ICase{T,R}[]
      description: Cases for the switch
    typeParameters:
    - id: T
      description: The type of the antecedent dialog.
    - id: R
      description: The type of the Dialog returned by <xref href="Microsoft.Bot.Builder.Dialogs.ContextualSelector`2"></xref>
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{R}
      description: The result <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Switch``2*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Then``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task{``1}})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Then``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task{``1}})
  id: Then``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task{``1}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Then<T,R>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task<R>>)
  nameWithType: Chain.Then<T,R>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task<R>>)
  fullName: Chain.Then<T,R>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task<R>>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Execute an action after the <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> completes.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<R> Then<T,R> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> Antecedent, Func<Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable<T>,System.Threading.Tasks.Task<R>> Action);
    parameters:
    - id: Antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: Action
      type: System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{T},System.Threading.Tasks.Task{R}}
      description: The action that will be called after the antecedent dialog completes.
    typeParameters:
    - id: T
      description: The type of the dialog.
    - id: R
      description: They type returned by action.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{R}
      description: The antecedent dialog.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Then``2*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Unwrap``1(Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Unwrap``1(Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  id: Unwrap``1(Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Unwrap<T>(IDialog<IDialog<T>>)
  nameWithType: Chain.Unwrap<T>(IDialog<IDialog<T>>)
  fullName: Chain.Unwrap<T>(IDialog<IDialog<T>>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: When the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> where T is <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> completes, unwrap the result into a new <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> Unwrap<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<Microsoft.Bot.Builder.Dialogs.IDialog<T>> antecedent);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Builder.Dialogs.IDialog{T}}
      description: The antecedent dialog <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> where T is <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    typeParameters:
    - id: T
      description: The type of the antecedent dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: An <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Unwrap``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Void``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Void``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  id: Void``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Void<T,R>(IDialog<T>)
  nameWithType: Chain.Void<T,R>(IDialog<T>)
  fullName: Chain.Void<T,R>(IDialog<T>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Call the voided <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>, ignore the result, then restart the original dialog wait.
  remarks: >-
    The purpose of this method is to wrap an antecedent dialog A with a new dialog D to push on the stack
                on top of the existing stack top dialog L.
                1. D will call A.
                2. D will receive the value of A when A is done.
                3. D will re-initiate the typed wait (often for a message) for which a method of L was waiting
                4. D will receive that value of the re-initiated typed wait.
                5. D will return that value of the typed wait to L.
                This depends on the symmetry of IDialogStack.Done and IDialogStack.Wait in how they satisfy typed waits.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<R> Void<T,R> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The voided dialog.
    typeParameters:
    - id: T
      description: The type of the voided dialog.
    - id: R
      description: The type of the original dialog wait.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{R}
      description: The dialog that produces the item to satisfy the original wait.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Void``2*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Void``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack)
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Void``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack)
  id: Void``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack)
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Void<T>(IDialog<T>, IDialogStack)
  nameWithType: Chain.Void<T>(IDialog<T>, IDialogStack)
  fullName: Chain.Void<T>(IDialog<T>, IDialogStack)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Call the voided <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>, ignore the result, then restart the original dialog wait.
  remarks: "(value types don't support generic parameter variance - so this reflection-based method may not work)\n            It's okay to loose type information (i.e. IDialog{object}) because voided dialogs are called with a null \n            <xref href=\"Microsoft.Bot.Builder.Dialogs.ResumeAfter`1\"></xref> because they are hacking the stack to satisfy the wait of the interrupted dialog."
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<object> Void<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack stack);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The voided dialog.
    - id: stack
      type: Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack
      description: The dialog stack.
    typeParameters:
    - id: T
      description: The type of the voided dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{System.Object}
      description: The dialog that produces the item to satisfy the original wait.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Void``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.WaitToBot``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.WaitToBot``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  id: WaitToBot``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: WaitToBot<T>(IDialog<T>)
  nameWithType: Chain.WaitToBot<T>(IDialog<T>)
  fullName: Chain.WaitToBot<T>(IDialog<T>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Post to the chain the message to the bot after the antecedent completes.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<Microsoft.Bot.Connector.IMessageActivity> WaitToBot<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    typeParameters:
    - id: T
      description: The type of the dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Connector.IMessageActivity}
      description: The dialog representing the message sent to the bot.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.WaitToBot``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Where``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,System.Boolean})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.Where``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,System.Boolean})
  id: Where``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,System.Boolean})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: Where<T>(IDialog<T>, Func<T,Boolean>)
  nameWithType: Chain.Where<T>(IDialog<T>, Func<T,Boolean>)
  fullName: Chain.Where<T>(IDialog<T>, Func<T,Boolean>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: When the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> has completed, evaluate the predicate and decide whether to continue.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> Where<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, Func<T,bool> predicate);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
    - id: predicate
      type: System.Func{T,System.Boolean}
      description: The predicate to decide whether to continue the chain.
    typeParameters:
    - id: T
      description: The type of the antecedent dialog.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The result from the antecedent <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> or its cancellation, wrapped in a <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref>.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.Where``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.While``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{System.Boolean}},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.While``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{System.Boolean}},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  id: While``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{System.Boolean}},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: While<T>(IDialog<T>, Func<T,IDialog<Boolean>>, Func<T,IDialog<T>>)
  nameWithType: Chain.While<T>(IDialog<T>, Func<T,IDialog<Boolean>>, Func<T,IDialog<T>>)
  fullName: Chain.While<T>(IDialog<T>, Func<T,IDialog<Boolean>>, Func<T,IDialog<T>>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Create a <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> that represents a while loop.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> While<T> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> initial, Func<T,Microsoft.Bot.Builder.Dialogs.IDialog<bool>> test, Func<T,Microsoft.Bot.Builder.Dialogs.IDialog<T>> body);
    parameters:
    - id: initial
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The value if <code>test</code> is never true.
    - id: test
      type: System.Func{T,Microsoft.Bot.Builder.Dialogs.IDialog{System.Boolean}}
      description: The test to enter the while loop <code>body</code>.
    - id: body
      type: System.Func{T,Microsoft.Bot.Builder.Dialogs.IDialog{T}}
      description: The body of the while loop.
    typeParameters:
    - id: T
      description: The type of the value.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: Zero or the last value returned by the <code>body</code> of the while loop.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.While``1*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.WithScorable``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Scorables.IScorable{``1,``2})
  commentId: M:Microsoft.Bot.Builder.Dialogs.Chain.WithScorable``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Scorables.IScorable{``1,``2})
  id: WithScorable``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Scorables.IScorable{``1,``2})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  langs:
  - csharp
  name: WithScorable<T,Item,Score>(IDialog<T>, IScorable<Item,Score>)
  nameWithType: Chain.WithScorable<T,Item,Score>(IDialog<T>, IScorable<Item,Score>)
  fullName: Chain.WithScorable<T,Item,Score>(IDialog<T>, IScorable<Item,Score>)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: Decorate a dialog with a scorable, so that a scorable can participate on the dialog stack.
  syntax:
    content: public static Microsoft.Bot.Builder.Dialogs.IDialog<T> WithScorable<T,Item,Score> (this Microsoft.Bot.Builder.Dialogs.IDialog<T> antecedent, Microsoft.Bot.Builder.Scorables.IScorable<Item,Score> scorable);
    parameters:
    - id: antecedent
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The antecedent dialog.
    - id: scorable
      type: Microsoft.Bot.Builder.Scorables.IScorable`2
      description: The scorable.
    typeParameters:
    - id: T
      description: The type of the dialog.
    - id: Item
      description: The type of the item scored by the scorable.
    - id: Score
      description: The type of the scope produced by the scorable.
    return:
      type: Microsoft.Bot.Builder.Dialogs.IDialog{T}
      description: The dialog augmented with the scorables.
  overload: Microsoft.Bot.Builder.Dialogs.Chain.WithScorable``3*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
references:
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Case``1(System.Text.RegularExpressions.Regex,Microsoft.Bot.Builder.Dialogs.ContextualSelector{System.String,``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Case<R>(Regex, ContextualSelector<String,R>)
  nameWithType: Chain.Case<R>(Regex, ContextualSelector<String,R>)
  fullName: Chain.Case<R>(Regex, ContextualSelector<String,R>)
- uid: Microsoft.Bot.Builder.Dialogs.ICase`2
  name: ICase<T,R>
  nameWithType: ICase<T,R>
  fullName: Microsoft.Bot.Builder.Dialogs.ICase<T,R>
- uid: System.String
  name: String
  nameWithType: String
  fullName: System.String
- uid: R
  name: R
  nameWithType: R
  fullName: R
- uid: Microsoft.Bot.Builder.Dialogs.ICase{System.String,R}
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: ICase<String,R>
  nameWithType: ICase<String,R>
  fullName: Microsoft.Bot.Builder.Dialogs.ICase<System.String,R>
  spec.csharp:
  - uid: Microsoft.Bot.Builder.Dialogs.ICase`2
    name: ICase
    nameWithType: ICase
    fullName: Microsoft.Bot.Builder.Dialogs.ICase
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: R
    name: R
    nameWithType: R
    fullName: R
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: Microsoft.Bot.Builder.Dialogs.ContextualSelector`2
  name: ContextualSelector<T,R>
  nameWithType: ContextualSelector<T,R>
  fullName: Microsoft.Bot.Builder.Dialogs.ContextualSelector<T,R>
- uid: Microsoft.Bot.Builder.Dialogs.ContextualSelector{System.String,R}
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: ContextualSelector<String,R>
  nameWithType: ContextualSelector<String,R>
  fullName: Microsoft.Bot.Builder.Dialogs.ContextualSelector<System.String,R>
  spec.csharp:
  - uid: Microsoft.Bot.Builder.Dialogs.ContextualSelector`2
    name: ContextualSelector
    nameWithType: ContextualSelector
    fullName: Microsoft.Bot.Builder.Dialogs.ContextualSelector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: R
    name: R
    nameWithType: R
    fullName: R
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Case``2(System.Func{``0,System.Boolean},Microsoft.Bot.Builder.Dialogs.ContextualSelector{``0,``1})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Case<T,R>(Func<T,Boolean>, ContextualSelector<T,R>)
  nameWithType: Chain.Case<T,R>(Func<T,Boolean>, ContextualSelector<T,R>)
  fullName: Chain.Case<T,R>(Func<T,Boolean>, ContextualSelector<T,R>)
- uid: System.Func`2
  name: Func
  nameWithType: Func
  fullName: System.Func
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func{T,System.Boolean}
  parent: System
  isExternal: true
  name: Func<T,Boolean>
  nameWithType: Func<T,Boolean>
  fullName: System.Func<T,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Catch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Catch<T,E>(IDialog<T>, Func<IDialog<T>,E,IDialog<T>>)
  nameWithType: Chain.Catch<T,E>(IDialog<T>, Func<IDialog<T>,E,IDialog<T>>)
  fullName: Chain.Catch<T,E>(IDialog<T>, Func<IDialog<T>,E,IDialog<T>>)
- uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
  name: IDialog<TResult>
  nameWithType: IDialog<TResult>
  fullName: Microsoft.Bot.Builder.Dialogs.IDialog<TResult>
- uid: Microsoft.Bot.Builder.Dialogs.IDialog{T}
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: IDialog<T>
  nameWithType: IDialog<T>
  fullName: Microsoft.Bot.Builder.Dialogs.IDialog<T>
  spec.csharp:
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func`3
  name: Func
  nameWithType: Func
  fullName: System.Func
- uid: E
  name: E
  nameWithType: E
  fullName: E
- uid: System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{T},E,Microsoft.Bot.Builder.Dialogs.IDialog{T}}
  parent: System
  isExternal: true
  name: Func<IDialog<T>,E,IDialog<T>>
  nameWithType: Func<IDialog<T>,E,IDialog<T>>
  fullName: System.Func<Microsoft.Bot.Builder.Dialogs.IDialog<T>,E,Microsoft.Bot.Builder.Dialogs.IDialog<T>>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: E
    name: E
    nameWithType: E
    fullName: E
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Catch``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Exception,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Catch<T>(IDialog<T>, Func<IDialog<T>,Exception,IDialog<T>>)
  nameWithType: Chain.Catch<T>(IDialog<T>, Func<IDialog<T>,Exception,IDialog<T>>)
  fullName: Chain.Catch<T>(IDialog<T>, Func<IDialog<T>,Exception,IDialog<T>>)
- uid: System.Exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{T},System.Exception,Microsoft.Bot.Builder.Dialogs.IDialog{T}}
  parent: System
  isExternal: true
  name: Func<IDialog<T>,Exception,IDialog<T>>
  nameWithType: Func<IDialog<T>,Exception,IDialog<T>>
  fullName: System.Func<Microsoft.Bot.Builder.Dialogs.IDialog<T>,System.Exception,Microsoft.Bot.Builder.Dialogs.IDialog<T>>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.ContinueWith``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Chain.Continuation{``0,``1})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: ContinueWith<T,R>(IDialog<T>, Chain)
  nameWithType: Chain.ContinueWith<T,R>(IDialog<T>, Chain)
  fullName: Chain.ContinueWith<T,R>(IDialog<T>, Chain)
- uid: Microsoft.Bot.Builder.Dialogs.IDialog{R}
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: IDialog<R>
  nameWithType: IDialog<R>
  fullName: Microsoft.Bot.Builder.Dialogs.IDialog<R>
  spec.csharp:
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: R
    name: R
    nameWithType: R
    fullName: R
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: Chain
  nameWithType: Chain
  fullName: Microsoft.Bot.Builder.Dialogs.Chain+Continuation<T,R>
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Default``2(Microsoft.Bot.Builder.Dialogs.ContextualSelector{``0,``1})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Default<T,R>(ContextualSelector<T,R>)
  nameWithType: Chain.Default<T,R>(ContextualSelector<T,R>)
  fullName: Chain.Default<T,R>(ContextualSelector<T,R>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: DefaultIfException<T,E>(IDialog<T>)
  nameWithType: Chain.DefaultIfException<T,E>(IDialog<T>)
  fullName: Chain.DefaultIfException<T,E>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: DefaultIfException<T>(IDialog<T>)
  nameWithType: Chain.DefaultIfException<T>(IDialog<T>)
  fullName: Chain.DefaultIfException<T>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Do``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Do<T>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task>)
  nameWithType: Chain.Do<T>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task>)
  fullName: Chain.Do<T>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task>)
- uid: Microsoft.Bot.Builder.Dialogs.IBotContext
  name: IBotContext
  nameWithType: IBotContext
  fullName: Microsoft.Bot.Builder.Dialogs.IBotContext
- uid: Microsoft.Bot.Builder.Dialogs.IAwaitable`1
  name: IAwaitable<T>
  nameWithType: IAwaitable<T>
  fullName: Microsoft.Bot.Builder.Dialogs.IAwaitable<T>
- uid: System.Threading.Tasks.Task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{T},System.Threading.Tasks.Task}
  parent: System
  isExternal: true
  name: Func<IBotContext,IAwaitable<T>,Task>
  nameWithType: Func<IBotContext,IAwaitable<T>,Task>
  fullName: System.Func<Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable<T>,System.Threading.Tasks.Task>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Bot.Builder.Dialogs.IBotContext
    name: IBotContext
    nameWithType: IBotContext
    fullName: Microsoft.Bot.Builder.Dialogs.IBotContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Bot.Builder.Dialogs.IAwaitable`1
    name: IAwaitable
    nameWithType: IAwaitable
    fullName: Microsoft.Bot.Builder.Dialogs.IAwaitable
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Fold``1(Microsoft.Bot.Builder.Dialogs.IDialog{System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Dialogs.IDialog{``0}}},System.Func{``0,``0,``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Fold<T>(IDialog<IEnumerable<IDialog<T>>>, Func<T,T,T>)
  nameWithType: Chain.Fold<T>(IDialog<IEnumerable<IDialog<T>>>, Func<T,T,T>)
  fullName: Chain.Fold<T>(IDialog<IEnumerable<IDialog<T>>>, Func<T,T,T>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.Generic.IEnumerable
- uid: Microsoft.Bot.Builder.Dialogs.IDialog{System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Dialogs.IDialog{T}}}
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: IDialog<IEnumerable<IDialog<T>>>
  nameWithType: IDialog<IEnumerable<IDialog<T>>>
  fullName: Microsoft.Bot.Builder.Dialogs.IDialog<System.Collections.Generic.IEnumerable<Microsoft.Bot.Builder.Dialogs.IDialog<T>>>
  spec.csharp:
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{T,T,T}
  parent: System
  isExternal: true
  name: Func<T,T,T>
  nameWithType: Func<T,T,T>
  fullName: System.Func<T,T,T>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.From``1(System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: From<T>(Func<IDialog<T>>)
  nameWithType: Chain.From<T>(Func<IDialog<T>>)
  fullName: Chain.From<T>(Func<IDialog<T>>)
- uid: System.Func`1
  name: Func
  nameWithType: Func
  fullName: System.Func
- uid: System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{T}}
  parent: System
  isExternal: true
  name: Func<IDialog<T>>
  nameWithType: Func<IDialog<T>>
  fullName: System.Func<Microsoft.Bot.Builder.Dialogs.IDialog<T>>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Loop``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Loop<T>(IDialog<T>)
  nameWithType: Chain.Loop<T>(IDialog<T>)
  fullName: Chain.Loop<T>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostEvent``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1)
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: PostEvent<T,E>(IDialog<T>, E)
  nameWithType: Chain.PostEvent<T,E>(IDialog<T>, E)
  fullName: Chain.PostEvent<T,E>(IDialog<T>, E)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostToChain
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: PostToChain()
  nameWithType: Chain.PostToChain()
  fullName: Chain.PostToChain()
- uid: Microsoft.Bot.Connector.IMessageActivity
  name: IMessageActivity
  nameWithType: IMessageActivity
  fullName: Microsoft.Bot.Connector.IMessageActivity
- uid: Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Connector.IMessageActivity}
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: IDialog<IMessageActivity>
  nameWithType: IDialog<IMessageActivity>
  fullName: Microsoft.Bot.Builder.Dialogs.IDialog<Microsoft.Bot.Connector.IMessageActivity>
  spec.csharp:
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Bot.Connector.IMessageActivity
    name: IMessageActivity
    nameWithType: IMessageActivity
    fullName: Microsoft.Bot.Connector.IMessageActivity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostToUser``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: PostToUser<T>(IDialog<T>)
  nameWithType: Chain.PostToUser<T>(IDialog<T>)
  fullName: Chain.PostToUser<T>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Return``1(``0)
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Return<T>(T)
  nameWithType: Chain.Return<T>(T)
  fullName: Chain.Return<T>(T)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Select``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,``1})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Select<T,R>(IDialog<T>, Func<T,R>)
  nameWithType: Chain.Select<T,R>(IDialog<T>, Func<T,R>)
  fullName: Chain.Select<T,R>(IDialog<T>, Func<T,R>)
- uid: System.Func{T,R}
  parent: System
  isExternal: true
  name: Func<T,R>
  nameWithType: Func<T,R>
  fullName: System.Func<T,R>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: R
    name: R
    nameWithType: R
    fullName: R
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.SelectMany``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``1}},System.Func{``0,``1,``2})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: SelectMany<T,C,R>(IDialog<T>, Func<T,IDialog<C>>, Func<T,C,R>)
  nameWithType: Chain.SelectMany<T,C,R>(IDialog<T>, Func<T,IDialog<C>>, Func<T,C,R>)
  fullName: Chain.SelectMany<T,C,R>(IDialog<T>, Func<T,IDialog<C>>, Func<T,C,R>)
- uid: C
  name: C
  nameWithType: C
  fullName: C
- uid: System.Func{T,Microsoft.Bot.Builder.Dialogs.IDialog{C}}
  parent: System
  isExternal: true
  name: Func<T,IDialog<C>>
  nameWithType: Func<T,IDialog<C>>
  fullName: System.Func<T,Microsoft.Bot.Builder.Dialogs.IDialog<C>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: C
    name: C
    nameWithType: C
    fullName: C
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{T,C,R}
  parent: System
  isExternal: true
  name: Func<T,C,R>
  nameWithType: Func<T,C,R>
  fullName: System.Func<T,C,R>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: C
    name: C
    nameWithType: C
    fullName: C
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: R
    name: R
    nameWithType: R
    fullName: R
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Switch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.ICase{``0,``1}[])
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Switch<T,R>(IDialog<T>, ICase<T,R>[])
  nameWithType: Chain.Switch<T,R>(IDialog<T>, ICase<T,R>[])
  fullName: Chain.Switch<T,R>(IDialog<T>, ICase<T,R>[])
- uid: Microsoft.Bot.Builder.Dialogs.ICase{T,R}[]
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: ICase<T,R>[]
  nameWithType: ICase<T,R>[]
  fullName: Microsoft.Bot.Builder.Dialogs.ICase<T,R>[]
  spec.csharp:
  - uid: Microsoft.Bot.Builder.Dialogs.ICase`2
    name: ICase
    nameWithType: ICase
    fullName: Microsoft.Bot.Builder.Dialogs.ICase
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: R
    name: R
    nameWithType: R
    fullName: R
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Then``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task{``1}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Then<T,R>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task<R>>)
  nameWithType: Chain.Then<T,R>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task<R>>)
  fullName: Chain.Then<T,R>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task<R>>)
- uid: System.Threading.Tasks.Task`1
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{T},System.Threading.Tasks.Task{R}}
  parent: System
  isExternal: true
  name: Func<IBotContext,IAwaitable<T>,Task<R>>
  nameWithType: Func<IBotContext,IAwaitable<T>,Task<R>>
  fullName: System.Func<Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable<T>,System.Threading.Tasks.Task<R>>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Bot.Builder.Dialogs.IBotContext
    name: IBotContext
    nameWithType: IBotContext
    fullName: Microsoft.Bot.Builder.Dialogs.IBotContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Bot.Builder.Dialogs.IAwaitable`1
    name: IAwaitable
    nameWithType: IAwaitable
    fullName: Microsoft.Bot.Builder.Dialogs.IAwaitable
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: R
    name: R
    nameWithType: R
    fullName: R
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Unwrap``1(Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Unwrap<T>(IDialog<IDialog<T>>)
  nameWithType: Chain.Unwrap<T>(IDialog<IDialog<T>>)
  fullName: Chain.Unwrap<T>(IDialog<IDialog<T>>)
- uid: Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Builder.Dialogs.IDialog{T}}
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: IDialog<IDialog<T>>
  nameWithType: IDialog<IDialog<T>>
  fullName: Microsoft.Bot.Builder.Dialogs.IDialog<Microsoft.Bot.Builder.Dialogs.IDialog<T>>
  spec.csharp:
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Void``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Void<T,R>(IDialog<T>)
  nameWithType: Chain.Void<T,R>(IDialog<T>)
  fullName: Chain.Void<T,R>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Void``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack)
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Void<T>(IDialog<T>, IDialogStack)
  nameWithType: Chain.Void<T>(IDialog<T>, IDialogStack)
  fullName: Chain.Void<T>(IDialog<T>, IDialogStack)
- uid: Microsoft.Bot.Builder.Dialogs.IDialog{System.Object}
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: IDialog<Object>
  nameWithType: IDialog<Object>
  fullName: Microsoft.Bot.Builder.Dialogs.IDialog<System.Object>
  spec.csharp:
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack
  parent: Microsoft.Bot.Builder.Dialogs.Internals
  isExternal: false
  name: IDialogStack
  nameWithType: IDialogStack
  fullName: Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack
- uid: Microsoft.Bot.Builder.Dialogs.Chain.WaitToBot``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: WaitToBot<T>(IDialog<T>)
  nameWithType: Chain.WaitToBot<T>(IDialog<T>)
  fullName: Chain.WaitToBot<T>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Where``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,System.Boolean})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Where<T>(IDialog<T>, Func<T,Boolean>)
  nameWithType: Chain.Where<T>(IDialog<T>, Func<T,Boolean>)
  fullName: Chain.Where<T>(IDialog<T>, Func<T,Boolean>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.While``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{System.Boolean}},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: While<T>(IDialog<T>, Func<T,IDialog<Boolean>>, Func<T,IDialog<T>>)
  nameWithType: Chain.While<T>(IDialog<T>, Func<T,IDialog<Boolean>>, Func<T,IDialog<T>>)
  fullName: Chain.While<T>(IDialog<T>, Func<T,IDialog<Boolean>>, Func<T,IDialog<T>>)
- uid: System.Func{T,Microsoft.Bot.Builder.Dialogs.IDialog{System.Boolean}}
  parent: System
  isExternal: true
  name: Func<T,IDialog<Boolean>>
  nameWithType: Func<T,IDialog<Boolean>>
  fullName: System.Func<T,Microsoft.Bot.Builder.Dialogs.IDialog<System.Boolean>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{T,Microsoft.Bot.Builder.Dialogs.IDialog{T}}
  parent: System
  isExternal: true
  name: Func<T,IDialog<T>>
  nameWithType: Func<T,IDialog<T>>
  fullName: System.Func<T,Microsoft.Bot.Builder.Dialogs.IDialog<T>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
    name: IDialog
    nameWithType: IDialog
    fullName: Microsoft.Bot.Builder.Dialogs.IDialog
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Bot.Builder.Dialogs.Chain.WithScorable``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Scorables.IScorable{``1,``2})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: WithScorable<T,Item,Score>(IDialog<T>, IScorable<Item,Score>)
  nameWithType: Chain.WithScorable<T,Item,Score>(IDialog<T>, IScorable<Item,Score>)
  fullName: Chain.WithScorable<T,Item,Score>(IDialog<T>, IScorable<Item,Score>)
- uid: Microsoft.Bot.Builder.Scorables.IScorable`2
  parent: Microsoft.Bot.Builder.Scorables
  isExternal: false
  name: IScorable<Item,Score>
  nameWithType: IScorable<Item,Score>
  fullName: Microsoft.Bot.Builder.Scorables.IScorable<Item,Score>
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Case``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Case<R>
  nameWithType: Chain.Case<R>
  fullName: Chain.Case<R>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Case``2*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Case<T,R>
  nameWithType: Chain.Case<T,R>
  fullName: Chain.Case<T,R>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Catch``2*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Catch<T,E>
  nameWithType: Chain.Catch<T,E>
  fullName: Chain.Catch<T,E>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Catch``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Catch<T>
  nameWithType: Chain.Catch<T>
  fullName: Chain.Catch<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.ContinueWith``2*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: ContinueWith<T,R>
  nameWithType: Chain.ContinueWith<T,R>
  fullName: Chain.ContinueWith<T,R>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Default``2*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Default<T,R>
  nameWithType: Chain.Default<T,R>
  fullName: Chain.Default<T,R>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``2*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: DefaultIfException<T,E>
  nameWithType: Chain.DefaultIfException<T,E>
  fullName: Chain.DefaultIfException<T,E>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: DefaultIfException<T>
  nameWithType: Chain.DefaultIfException<T>
  fullName: Chain.DefaultIfException<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Do``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Do<T>
  nameWithType: Chain.Do<T>
  fullName: Chain.Do<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Fold``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Fold<T>
  nameWithType: Chain.Fold<T>
  fullName: Chain.Fold<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.From``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: From<T>
  nameWithType: Chain.From<T>
  fullName: Chain.From<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Loop``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Loop<T>
  nameWithType: Chain.Loop<T>
  fullName: Chain.Loop<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostEvent``2*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: PostEvent<T,E>
  nameWithType: Chain.PostEvent<T,E>
  fullName: Chain.PostEvent<T,E>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostToChain*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: PostToChain
  nameWithType: Chain.PostToChain
  fullName: Chain.PostToChain
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostToUser``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: PostToUser<T>
  nameWithType: Chain.PostToUser<T>
  fullName: Chain.PostToUser<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Return``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Return<T>
  nameWithType: Chain.Return<T>
  fullName: Chain.Return<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Select``2*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Select<T,R>
  nameWithType: Chain.Select<T,R>
  fullName: Chain.Select<T,R>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.SelectMany``3*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: SelectMany<T,C,R>
  nameWithType: Chain.SelectMany<T,C,R>
  fullName: Chain.SelectMany<T,C,R>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Switch``2*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Switch<T,R>
  nameWithType: Chain.Switch<T,R>
  fullName: Chain.Switch<T,R>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Then``2*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Then<T,R>
  nameWithType: Chain.Then<T,R>
  fullName: Chain.Then<T,R>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Unwrap``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Unwrap<T>
  nameWithType: Chain.Unwrap<T>
  fullName: Chain.Unwrap<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Void``2*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Void<T,R>
  nameWithType: Chain.Void<T,R>
  fullName: Chain.Void<T,R>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Void``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Void<T>
  nameWithType: Chain.Void<T>
  fullName: Chain.Void<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.WaitToBot``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: WaitToBot<T>
  nameWithType: Chain.WaitToBot<T>
  fullName: Chain.WaitToBot<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Where``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Where<T>
  nameWithType: Chain.Where<T>
  fullName: Chain.Where<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.While``1*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: While<T>
  nameWithType: Chain.While<T>
  fullName: Chain.While<T>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.WithScorable``3*
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: WithScorable<T,Item,Score>
  nameWithType: Chain.WithScorable<T,Item,Score>
  fullName: Chain.WithScorable<T,Item,Score>
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/Chain.xml
