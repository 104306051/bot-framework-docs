### YamlMime:ManagedReference
items:
- uid: Microsoft.Bot.Builder.Dialogs.IDialog`1
  commentId: T:Microsoft.Bot.Builder.Dialogs.IDialog`1
  id: IDialog`1
  children:
  - Microsoft.Bot.Builder.Dialogs.IDialog`1.StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)
  langs:
  - csharp
  name: IDialog<TResult>
  nameWithType: IDialog<TResult>
  fullName: Microsoft.Bot.Builder.Dialogs.IDialog<TResult>
  type: Interface
  assemblies:
  - Microsoft.Bot.Builder
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: A <xref href="Microsoft.Bot.Builder.Dialogs.IDialog`1"></xref> is a suspendable conversational process that produces a result of type <code>TResult</code>.
  remarks: >-
    Dialogs can call child dialogs or send messages to a user.
                Dialogs are suspended when waiting for a message from the user to the bot.
                Dialogs are resumed when the bot receives a message from the user.
  syntax:
    content: public interface IDialog<out TResult>
    typeParameters:
    - id: TResult
      description: The result type.
  derivedClasses:
  - Microsoft.Bot.Builder.Dialogs.CommandDialog`1
  - Microsoft.Bot.Builder.Dialogs.DispatchDialog`1
  - Microsoft.Bot.Builder.Dialogs.IDialog
  - Microsoft.Bot.Builder.Dialogs.LuisActionDialog
  - Microsoft.Bot.Builder.Dialogs.LuisDialog`1
  - Microsoft.Bot.Builder.Dialogs.Internals.Prompt`2
  - Microsoft.Bot.Builder.FormFlow.FormDialog`1
  - Microsoft.Bot.Builder.FormFlow.IFormDialog`1
  implements: []
  extensionMethods:
  - Microsoft.Bot.Builder.Dialogs.Chain.Catch``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Exception,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  - Microsoft.Bot.Builder.Dialogs.Chain.Catch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  - Microsoft.Bot.Builder.Dialogs.Chain.ContinueWith``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Chain.Continuation{``0,``1})
  - Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.Do``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task})
  - Microsoft.Bot.Builder.Dialogs.Chain.Fold``1(Microsoft.Bot.Builder.Dialogs.IDialog{System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Dialogs.IDialog{``0}}},System.Func{``0,``0,``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.Loop``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.PostEvent``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1)
  - Microsoft.Bot.Builder.Dialogs.Chain.PostToUser``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.Select``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,``1})
  - Microsoft.Bot.Builder.Dialogs.Chain.SelectMany``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``1}},System.Func{``0,``1,``2})
  - Microsoft.Bot.Builder.Dialogs.Chain.Switch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.ICase{``0,``1}[])
  - Microsoft.Bot.Builder.Dialogs.Chain.Then``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task{``1}})
  - Microsoft.Bot.Builder.Dialogs.Chain.Unwrap``1(Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  - Microsoft.Bot.Builder.Dialogs.Chain.Void``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack)
  - Microsoft.Bot.Builder.Dialogs.Chain.Void``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.WaitToBot``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  - Microsoft.Bot.Builder.Dialogs.Chain.Where``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,System.Boolean})
  - Microsoft.Bot.Builder.Dialogs.Chain.While``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{System.Boolean}},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  - Microsoft.Bot.Builder.Dialogs.Chain.WithScorable``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Scorables.IScorable{``1,``2})
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/IDialog`1.xml
- uid: Microsoft.Bot.Builder.Dialogs.IDialog`1.StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)
  commentId: M:Microsoft.Bot.Builder.Dialogs.IDialog`1.StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)
  id: StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)
  parent: Microsoft.Bot.Builder.Dialogs.IDialog`1
  langs:
  - csharp
  name: StartAsync(IDialogContext)
  nameWithType: IDialog<TResult>.StartAsync(IDialogContext)
  fullName: IDialog<TResult>.StartAsync(IDialogContext)
  type: Method
  assemblies:
  - 
  namespace: Microsoft.Bot.Builder.Dialogs
  summary: The start of the code that represents the conversational dialog.
  syntax:
    content: public System.Threading.Tasks.Task StartAsync (Microsoft.Bot.Builder.Dialogs.IDialogContext context);
    parameters:
    - id: context
      type: Microsoft.Bot.Builder.Dialogs.IDialogContext
      description: The dialog context.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the dialog start.
  overload: Microsoft.Bot.Builder.Dialogs.IDialog`1.StartAsync*
  exceptions: []
  version:
  - botbuilder-3.5.5
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/IDialog`1.xml
references:
- uid: Microsoft.Bot.Builder.Dialogs.IDialog`1.StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)
  parent: Microsoft.Bot.Builder.Dialogs.IDialog`1
  isExternal: false
  name: StartAsync(IDialogContext)
  nameWithType: IDialog<TResult>.StartAsync(IDialogContext)
  fullName: IDialog<TResult>.StartAsync(IDialogContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Bot.Builder.Dialogs.IDialogContext
  parent: Microsoft.Bot.Builder.Dialogs
  isExternal: false
  name: IDialogContext
  nameWithType: IDialogContext
  fullName: Microsoft.Bot.Builder.Dialogs.IDialogContext
- uid: Microsoft.Bot.Builder.Dialogs.IDialog`1.StartAsync*
  parent: Microsoft.Bot.Builder.Dialogs.IDialog`1
  isExternal: false
  name: StartAsync
  nameWithType: IDialog<TResult>.StartAsync
  fullName: IDialog<TResult>.StartAsync
  monikers:
  - botbuilder-3.5.5
  content_git_url: https://github.com/MicrosoftDocs/bot-docs-pr/blob/AppAnalytics/dotnet/xml/Microsoft.Bot.Builder.Dialogs/IDialog`1.xml
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Catch``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Exception,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Catch<T>(IDialog<T>, Func<IDialog<T>,Exception,IDialog<T>>)
  nameWithType: Chain.Catch<T>(IDialog<T>, Func<IDialog<T>,Exception,IDialog<T>>)
  fullName: Chain.Catch<T>(IDialog<T>, Func<IDialog<T>,Exception,IDialog<T>>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Catch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Catch<T,E>(IDialog<T>, Func<IDialog<T>,E,IDialog<T>>)
  nameWithType: Chain.Catch<T,E>(IDialog<T>, Func<IDialog<T>,E,IDialog<T>>)
  fullName: Chain.Catch<T,E>(IDialog<T>, Func<IDialog<T>,E,IDialog<T>>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.ContinueWith``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Chain.Continuation{``0,``1})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: ContinueWith<T,R>(IDialog<T>, Chain)
  nameWithType: Chain.ContinueWith<T,R>(IDialog<T>, Chain)
  fullName: Chain.ContinueWith<T,R>(IDialog<T>, Chain)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: DefaultIfException<T>(IDialog<T>)
  nameWithType: Chain.DefaultIfException<T>(IDialog<T>)
  fullName: Chain.DefaultIfException<T>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.DefaultIfException``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: DefaultIfException<T,E>(IDialog<T>)
  nameWithType: Chain.DefaultIfException<T,E>(IDialog<T>)
  fullName: Chain.DefaultIfException<T,E>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Do``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Do<T>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task>)
  nameWithType: Chain.Do<T>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task>)
  fullName: Chain.Do<T>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Fold``1(Microsoft.Bot.Builder.Dialogs.IDialog{System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Dialogs.IDialog{``0}}},System.Func{``0,``0,``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Fold<T>(IDialog<IEnumerable<IDialog<T>>>, Func<T,T,T>)
  nameWithType: Chain.Fold<T>(IDialog<IEnumerable<IDialog<T>>>, Func<T,T,T>)
  fullName: Chain.Fold<T>(IDialog<IEnumerable<IDialog<T>>>, Func<T,T,T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Loop``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Loop<T>(IDialog<T>)
  nameWithType: Chain.Loop<T>(IDialog<T>)
  fullName: Chain.Loop<T>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostEvent``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1)
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: PostEvent<T,E>(IDialog<T>, E)
  nameWithType: Chain.PostEvent<T,E>(IDialog<T>, E)
  fullName: Chain.PostEvent<T,E>(IDialog<T>, E)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.PostToUser``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: PostToUser<T>(IDialog<T>)
  nameWithType: Chain.PostToUser<T>(IDialog<T>)
  fullName: Chain.PostToUser<T>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Select``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,``1})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Select<T,R>(IDialog<T>, Func<T,R>)
  nameWithType: Chain.Select<T,R>(IDialog<T>, Func<T,R>)
  fullName: Chain.Select<T,R>(IDialog<T>, Func<T,R>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.SelectMany``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``1}},System.Func{``0,``1,``2})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: SelectMany<T,C,R>(IDialog<T>, Func<T,IDialog<C>>, Func<T,C,R>)
  nameWithType: Chain.SelectMany<T,C,R>(IDialog<T>, Func<T,IDialog<C>>, Func<T,C,R>)
  fullName: Chain.SelectMany<T,C,R>(IDialog<T>, Func<T,IDialog<C>>, Func<T,C,R>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Switch``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.ICase{``0,``1}[])
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Switch<T,R>(IDialog<T>, ICase<T,R>[])
  nameWithType: Chain.Switch<T,R>(IDialog<T>, ICase<T,R>[])
  fullName: Chain.Switch<T,R>(IDialog<T>, ICase<T,R>[])
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Then``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{Microsoft.Bot.Builder.Dialogs.IBotContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{``0},System.Threading.Tasks.Task{``1}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Then<T,R>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task<R>>)
  nameWithType: Chain.Then<T,R>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task<R>>)
  fullName: Chain.Then<T,R>(IDialog<T>, Func<IBotContext,IAwaitable<T>,Task<R>>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Unwrap``1(Microsoft.Bot.Builder.Dialogs.IDialog{Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Unwrap<T>(IDialog<IDialog<T>>)
  nameWithType: Chain.Unwrap<T>(IDialog<IDialog<T>>)
  fullName: Chain.Unwrap<T>(IDialog<IDialog<T>>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Void``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack)
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Void<T>(IDialog<T>, IDialogStack)
  nameWithType: Chain.Void<T>(IDialog<T>, IDialogStack)
  fullName: Chain.Void<T>(IDialog<T>, IDialogStack)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Void``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Void<T,R>(IDialog<T>)
  nameWithType: Chain.Void<T,R>(IDialog<T>)
  fullName: Chain.Void<T,R>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.WaitToBot``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: WaitToBot<T>(IDialog<T>)
  nameWithType: Chain.WaitToBot<T>(IDialog<T>)
  fullName: Chain.WaitToBot<T>(IDialog<T>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.Where``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,System.Boolean})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: Where<T>(IDialog<T>, Func<T,Boolean>)
  nameWithType: Chain.Where<T>(IDialog<T>, Func<T,Boolean>)
  fullName: Chain.Where<T>(IDialog<T>, Func<T,Boolean>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.While``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{System.Boolean}},System.Func{``0,Microsoft.Bot.Builder.Dialogs.IDialog{``0}})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: While<T>(IDialog<T>, Func<T,IDialog<Boolean>>, Func<T,IDialog<T>>)
  nameWithType: Chain.While<T>(IDialog<T>, Func<T,IDialog<Boolean>>, Func<T,IDialog<T>>)
  fullName: Chain.While<T>(IDialog<T>, Func<T,IDialog<Boolean>>, Func<T,IDialog<T>>)
- uid: Microsoft.Bot.Builder.Dialogs.Chain.WithScorable``3(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Scorables.IScorable{``1,``2})
  parent: Microsoft.Bot.Builder.Dialogs.Chain
  isExternal: false
  name: WithScorable<T,Item,Score>(IDialog<T>, IScorable<Item,Score>)
  nameWithType: Chain.WithScorable<T,Item,Score>(IDialog<T>, IScorable<Item,Score>)
  fullName: Chain.WithScorable<T,Item,Score>(IDialog<T>, IScorable<Item,Score>)
